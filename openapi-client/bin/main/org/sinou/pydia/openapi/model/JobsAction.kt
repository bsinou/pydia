/**
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 *
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.sinou.pydia.openapi.model

import org.sinou.pydia.openapi.model.JobsActionOutputFilter
import org.sinou.pydia.openapi.model.JobsChatEventFilter
import org.sinou.pydia.openapi.model.JobsContextMetaFilter
import org.sinou.pydia.openapi.model.JobsDataSelector
import org.sinou.pydia.openapi.model.JobsDataSourceSelector
import org.sinou.pydia.openapi.model.JobsIdmSelector
import org.sinou.pydia.openapi.model.JobsNodesSelector
import org.sinou.pydia.openapi.model.JobsTriggerFilter
import org.sinou.pydia.openapi.model.JobsUsersSelector

import com.squareup.moshi.Json
import com.squareup.moshi.JsonClass

/**
 * 
 *
 * @param actionOutputFilter 
 * @param breakAfter 
 * @param bypass 
 * @param chainedActions 
 * @param chatEventFilter 
 * @param contextMetaFilter 
 * @param dataFilter 
 * @param dataSelector 
 * @param dataSourceFilter 
 * @param dataSourceSelector 
 * @param description 
 * @param failedFilterActions 
 * @param ID 
 * @param idmFilter 
 * @param idmSelector 
 * @param label 
 * @param mergeAction 
 * @param nodesFilter 
 * @param nodesSelector 
 * @param parameters 
 * @param timeout 
 * @param triggerFilter 
 * @param usersFilter 
 * @param usersSelector 
 */


data class JobsAction (

    @Json(name = "ActionOutputFilter")
    val actionOutputFilter: JobsActionOutputFilter? = null,

    @Json(name = "BreakAfter")
    val breakAfter: kotlin.Boolean? = null,

    @Json(name = "Bypass")
    val bypass: kotlin.Boolean? = null,

    @Json(name = "ChainedActions")
    val chainedActions: kotlin.collections.List<JobsAction>? = null,

    @Json(name = "ChatEventFilter")
    val chatEventFilter: JobsChatEventFilter? = null,

    @Json(name = "ContextMetaFilter")
    val contextMetaFilter: JobsContextMetaFilter? = null,

    @Json(name = "DataFilter")
    val dataFilter: JobsDataSelector? = null,

    @Json(name = "DataSelector")
    val dataSelector: JobsDataSelector? = null,

    @Json(name = "DataSourceFilter")
    val dataSourceFilter: JobsDataSourceSelector? = null,

    @Json(name = "DataSourceSelector")
    val dataSourceSelector: JobsDataSourceSelector? = null,

    @Json(name = "Description")
    val description: kotlin.String? = null,

    @Json(name = "FailedFilterActions")
    val failedFilterActions: kotlin.collections.List<JobsAction>? = null,

    @Json(name = "ID")
    val ID: kotlin.String? = null,

    @Json(name = "IdmFilter")
    val idmFilter: JobsIdmSelector? = null,

    @Json(name = "IdmSelector")
    val idmSelector: JobsIdmSelector? = null,

    @Json(name = "Label")
    val label: kotlin.String? = null,

    @Json(name = "MergeAction")
    val mergeAction: JobsAction? = null,

    @Json(name = "NodesFilter")
    val nodesFilter: JobsNodesSelector? = null,

    @Json(name = "NodesSelector")
    val nodesSelector: JobsNodesSelector? = null,

    @Json(name = "Parameters")
    val parameters: kotlin.collections.Map<kotlin.String, kotlin.String>? = null,

    @Json(name = "Timeout")
    val timeout: kotlin.String? = null,

    @Json(name = "TriggerFilter")
    val triggerFilter: JobsTriggerFilter? = null,

    @Json(name = "UsersFilter")
    val usersFilter: JobsUsersSelector? = null,

    @Json(name = "UsersSelector")
    val usersSelector: JobsUsersSelector? = null

)

