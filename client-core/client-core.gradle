buildscript {

    ext {
        // Define dependency packages that are then used as shortcuts by the various modules.
        librariesKapt = [
                "androidx.room:room-compiler:2.6.0",
                "com.github.bumptech.glide:compiler:5.0.0-rc01",
        ]

        processors = [
                "com.github.bumptech.glide:compiler:5.0.0-rc01",
        ]

        libraries = [
                // Kotlin standard library and coroutines
                "org.jetbrains.kotlin:kotlin-stdlib:1.9.22",
                "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.7.3",
                "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3",

                // Android UI and appcompat
                "androidx.core:core:1.12.0",
                "androidx.core:core-splashscreen:1.0.1",

//                "androidx.appcompat:appcompat:$appcompat_version",
                // Navigation UI
//                "androidx.navigation:navigation-ui-ktx:$navigation_version",
                // ViewModel
                "androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.2",
                // Extended UI features: prefs and splash screen
//                "androidx.preference:preference:$preference_version",
//                "androidx.core:core-splashscreen:$splash_version",

                // Material UI => we still need this to build custom palette based on remote server custom primary color
                "com.google.android.material:material:1.10.0",

                // Room for database, work for background
                "androidx.room:room-ktx:2.6.0",
                "androidx.work:work-runtime-ktx:2.8.1",

                // Dependency injection with Koin https://insert-koin.io/
                // We now use the Koin BOM
                "io.insert-koin:koin-core",
                "io.insert-koin:koin-android",
                "io.insert-koin:koin-androidx-workmanager",
                "io.insert-koin:koin-androidx-navigation",

                // Files
                "com.amazonaws:aws-android-sdk-s3:2.73.0",
                "com.github.bumptech.glide:glide:5.0.0-rc01",

                // Preferences
                "androidx.datastore:datastore-preferences:1.0.0",

                // Utils
//                "commons-codec:commons-codec:$commons_codec_version",
                "com.google.code.gson:gson:2.10.1",
                // QRCode generation
                "com.google.zxing:core:3.5.2",
        ]

        // We rely on a BOM to provide correct versions of the Jetpack Compose libraries.
        // See cells-client gradle config
        composeLibraries = [
                "androidx.compose.runtime:runtime",
                "androidx.compose.ui:ui",
                "androidx.compose.ui:ui-util",
                "androidx.compose.ui:ui-tooling",
                "androidx.compose.foundation:foundation",
                "androidx.compose.foundation:foundation-layout",
                "androidx.compose.material3:material3",
                "androidx.compose.material3:material3-window-size-class",
                // We use material 3, so remove remaining code that depend on this and remove the dep.
                "androidx.compose.material:material",
                // This library is also provided as an API dependency by androidx.compose.material:material.
                // We specify it explicitly so that we won't break when we finally remove material lib from
                // the explicit dependency tree
                "androidx.compose.material:material-icons-core",
                // this separate library, the full set of Material icons. Due to the very large size of this lib,
                // Make sure to use R8/Proguard to strip unused icons when including this as a direct dependency.
                // See https://developer.android.com/reference/kotlin/androidx/compose/material/icons/package-summary
                "androidx.compose.material:material-icons-extended",

                // Include extensions that permit integration of Compose with extra 3rd party libraries.
                "io.insert-koin:koin-androidx-compose",
                "androidx.navigation:navigation-compose:2.7.4",
                "com.github.bumptech.glide:compose:1.0.0-beta01",
        ]
    }
}

plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
}


android {

    namespace 'org.sinou.pydia.client'

    compileSdk 34

    // Gather overrides in a distinct folder for easier maintenance
    sourceSets.main.res.srcDir 'src/main/res-overrides      '

    defaultConfig {
        applicationId "org.sinou.pydia.client.next"
        minSdk 24
        targetSdk 34
        versionCode 10
        versionName "0.2.1"

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    buildTypes {

//        release {
//            signingConfig signingConfigs.release
//            resValue "string", "app_version",
//                    "${defaultConfig.versionName}"
//
//            minifyEnabled true
//            // If you haven't already built your app using minifyEnabled for code shrinking,
//            // then try that before enabling shrinkResources, because you might need to edit your proguard-rules.pro file
//            // to keep classes or methods that are created or invoked dynamically before you start removing resources.
//            shrinkResources true
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//
//            // See https://developer.android.com/build/shrink-code#android_gradle_plugin_version_41_or_later
//            // And you must have this installed in Android Studio https://developer.android.com/studio/projects/install-ndk
//            // to also generate and upload the file that enable understanding stack traces seen in production
//            // The generated mapping.txt file can than be uploaded on the store followin this:
//            // https://support.google.com/googleplay/android-developer/answer/9848633#upload_file&zippy=%2Cupload-files-using-play-console
//            ndk {
//                debugSymbolLevel 'FULL'
//            }
//        }

        debug {
            versionNameSuffix = '-dev'
            resValue "string", "app_version",
                    "${defaultConfig.versionName}${versionNameSuffix}"
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    sourceSets {
        main {
            kotlin.srcDir 'src/main/kotlin'
            // Include Java source dir if you have mixed Java and Kotlin code
            java.srcDir 'src/main/java'
        }
    }

    kotlinOptions {
        jvmTarget = "17"
    }

    buildFeatures {
        compose true
        buildConfig true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.8"
    }

    kapt {
        arguments {
            arg("room.schemaLocation", "$projectDir/schemas".toString())
        }
    }

    // We do not want that the linter makes builds fail. It is quite extremist by default.
    lintOptions {
        abortOnError false
    }
}

dependencies {

    api project(":sdk-kotlin")

    implementation platform('androidx.compose:compose-bom:2023.10.01')
    implementation platform('io.insert-koin:koin-bom:3.5.3')

    kapt librariesKapt
    implementation libraries
    implementation composeLibraries


    implementation "io.insert-koin:koin-android"

    // override default platform version
    // e.G    implementation "androidx.compose.material3:material3:1.2.0-alpha1"

    // Enable custom data loader for glide library (display images)
    annotationProcessor processors

    testImplementation platform('io.insert-koin:koin-bom:3.5.3')

}
