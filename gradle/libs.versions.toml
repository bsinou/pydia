[versions]

# Plugins
android-gradle-plugin = "8.6.1"
gradle = "8.6.1"
kotlin = "2.0.0"
kotlin-reflect-version = "2.0.0"
kotlin-stdlib-jdk8-version = "2.0.0"
kotlin-stdlib-version = "2.0.0"
ksp-devtools-version ="2.0.0-1.0.22"

androidx-room-version = "2.6.1"

# SDk Kotlin
aws-android-sdk-s3-version = "2.75.2"
aws-java-sdk-core-version = "1.11.1030"
aws-java-sdk-s3-version = "1.11.1030"
commons-codec = "1.17.0"
compose-bom-version = "2024.09.02"
gson-fire-version = "1.9.0"
javax-annotation-api-version = "1.3.2"
json-rpc-version = "1.0"
koin-bom-version = "3.5.6"


core-ktx-version = "1.13.1"
core-splashscreen-version = "1.0.1"
datastore-preferences-version = "1.1.1"
gson = "2.11.0"
junit = "4.13.2"

kotlinx-coroutines-test-version = "1.8.1"

glide-version = "5.0.0-rc01"
glide-compose-version = "1.0.0-beta01"


lifecycle-viewmodel-ktx-version = "2.8.6"
logging-interceptor-version = "4.12.0"
material = "1.12.0"
moshi-adapters-version = "1.11.0"
moshi-kotlin-version = "1.11.0"
navigation-compose-version = "2.8.1"
okhttp-version = "4.12.0"
room-runtime-version = "2.6.1"
swagger-annotations-version = "1.6.13"
threetenbp-version = "1.6.8"
work-runtime-ktx-version = "2.9.1"

# All non-Android Third Parties
zxing-version = "3.5.3"
#aws-s3-sdk-version = "2.75.0"
#gson-version = "2.10.1"
#commons-codec-version = "1.17.0"

# Test libraries
#androidx-test-ext-version = "1.2.0"
#espresso-version = "3.6.0"
#junit-ktx-version = "1.2.0"

[libraries]
## Base libraries

kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }

kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin-stdlib-version" }
kotlin-stdlib-jdk8 = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin-stdlib-jdk8-version" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin-reflect-version" }

gradle = { module = "com.android.tools.build:gradle", version.ref = "gradle" }
javax-annotation-api = { module = "javax.annotation:javax.annotation-api", version.ref = "javax-annotation-api-version" }

kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines-test-version" }
logging-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "logging-interceptor-version" }

# OpenAPI
moshi-adapters = { module = "com.squareup.moshi:moshi-adapters", version.ref = "moshi-adapters-version" }
moshi-kotlin = { module = "com.squareup.moshi:moshi-kotlin", version.ref = "moshi-kotlin-version" }

## Room
androidx-room-compiler = { module = "androidx.room:room-compiler", version.ref = "room-runtime-version" }
androidx-room-ktx = { module = "androidx.room:room-ktx", version.ref = "room-runtime-version" }

## Koin
koin-bom = { module = "io.insert-koin:koin-bom", version.ref = "koin-bom-version" }
koin-core = { module = "io.insert-koin:koin-core" }
koin-android = { module = "io.insert-koin:koin-android" }
koin-androidx-compose = { module = "io.insert-koin:koin-androidx-compose" }
koin-androidx-navigation = { module = "io.insert-koin:koin-androidx-navigation" }
koin-androidx-workmanager = { module = "io.insert-koin:koin-androidx-workmanager" }

aws-java-sdk-core = { module = "com.amazonaws:aws-java-sdk-core", version.ref = "aws-java-sdk-core-version" }
aws-java-sdk-s3 = { module = "com.amazonaws:aws-java-sdk-s3", version.ref = "aws-java-sdk-s3-version" }

gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp-version" }
commons-codec = { module = "commons-codec:commons-codec", version.ref = "commons-codec" }
gson-fire = { module = "io.gsonfire:gson-fire", version.ref = "gson-fire-version" }
json-rpc = { module = "com.metaparadigm:json-rpc", version.ref = "json-rpc-version" }

## Compose
compose-bom = { module = "androidx.compose:compose-bom", version.ref = "compose-bom-version" }

## Androidx
androidx-runtime = { module = "androidx.compose.runtime:runtime" }
androidx-work-runtime-ktx = { module = "androidx.work:work-runtime-ktx", version.ref = "work-runtime-ktx-version" }
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "core-ktx-version" }
androidx-foundation = { module = "androidx.compose.foundation:foundation" }
androidx-foundation-layout = { module = "androidx.compose.foundation:foundation-layout" }
androidx-lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "lifecycle-viewmodel-ktx-version" }
androidx-material = { module = "androidx.compose.material:material" }
androidx-material-icons-core = { module = "androidx.compose.material:material-icons-core" }
androidx-material-icons-extended = { module = "androidx.compose.material:material-icons-extended" }
androidx-material3 = { module = "androidx.compose.material3:material3" }
androidx-core-splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "core-splashscreen-version" }

androidx-navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "navigation-compose-version" }

androidx-ui = { module = "androidx.compose.ui:ui" }
androidx-ui-tooling = { module = "androidx.compose.ui:ui-tooling" }
androidx-ui-util = { module = "androidx.compose.ui:ui-util" }
# Used to detect when we have a touch screen / large disdplay
androidx-material3-windowsizeclass = { module = "androidx.compose.material3:material3-window-size-class" }
# To compute dynamic colors
material = { module = "com.google.android.material:material", version.ref = "material" }

aws-android-sdk-s3 = { module = "com.amazonaws:aws-android-sdk-s3", version.ref = "aws-android-sdk-s3-version" }

glide = { module = "com.github.bumptech.glide:glide", version.ref = "glide-version" }
glide-compiler = { module = "com.github.bumptech.glide:compiler", version.ref = "glide-version" }
glide-ksp = { module = "com.github.bumptech.glide:ksp", version.ref = "glide-version" }
glide-compose = { module = "com.github.bumptech.glide:compose", version.ref = "glide-compose-version" }

# Extra libraries
swagger-annotations = { module = "io.swagger:swagger-annotations", version.ref = "swagger-annotations-version" }
threetenbp = { module = "org.threeten:threetenbp", version.ref = "threetenbp-version" }

#palette-ktx = { module = "androidx.palette:palette-ktx", version.ref = "palette-ktx-version" }
datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastore-preferences-version" }

# QRCode generation
zxing = { group = "com.google.zxing", name = "core", version.ref = "zxing-version" }

# Tests
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines-test-version" }
junit = { module = "junit:junit", version.ref = "junit" }
#androidx-junit = { module = "androidx.test.ext:junit", version.ref = "androidx-test-ext-version" }  # Check for the latest version
#espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "espresso-version" }
#androidx-junit-ktx = { group = "androidx.test.ext", name = "junit-ktx", version.ref = "junit-ktx-version" }
#kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines-test-version" }
#koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin-bom-version" }
#koin-test-junit4 = { module = "io.insert-koin:koin-test-junit4", version.ref = "koin-bom-version" }

[plugins]
android-application = { id = "com.android.application", version.ref = "android-gradle-plugin" }
ksp-devtools = { id = "com.google.devtools.ksp", version.ref = "ksp-devtools-version" }

# org-jetbrains-kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
# Add the Compose Compiler Gradle plugin, the version matches the Kotlin plugin
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }

androidx-room = { id = "androidx.room", version.ref = "androidx-room-version" }
